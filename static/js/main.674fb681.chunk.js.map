{"version":3,"sources":["MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Main","props","typistOver","setState","typed","showText","text","hideText","state","style","height","Avatar","alt","src","width","margin","this","onMouseEnter","onMouseLeave","fontSize","className","color","flexDirection","borderColor","borderWidth","borderStyle","icon","iconColor","backgroundColor","iconSize","roundness","url","size","onTypingDone","cursorHideWhenDone","id","Backspace","count","delay","Component","App","params","position","top","left","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.674fb681.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typist from 'react-typist'\nimport { SocialMediaIconsReact } from 'social-media-icons-react'\n\nimport './index.css'\n\nclass Main extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      typed: false,\n      text: \"{ Suryarajan S }\",\n    }\n  }\n\n  typistOver = () => {\n    this.setState({\n      typed: true\n    })\n  }\n\n  showText = () => {\n    this.setState({\n      text: \"{ theWellHopeErr }\"\n    })\n  }\n\n  hideText = () => {\n    this.setState({\n      text: \"{ Suryarajan S }\"\n    })\n  }\n\n  render() {\n    return (\n      <div style={{ height: \"100vh\" }}>\n        <Avatar\n          alt=\"Suryarajan S\"\n          src=\"/assets/images/logo.jpg\"\n          style={{\n            width: '20vw',\n            height: '20vw',\n            margin: '30px 0',\n          }}\n        />\n        {!this.state.typed ?\n          <Typist onTypingDone={this.typistOver} cursorHideWhenDone={true}>\n            <code><h1 id=\"name\">{\"{ Suryarajan }\"}</h1></code>\n            <span style={{color: \"#faed27\"}} className=\"tags\">{\"Full-Stack Developer\"}</span>\n            <Typist.Backspace count={20} delay={200} />\n            <span style={{color: \"#ff073a\"}} className=\"tags\">{\"Engineer\"}</span>\n            <Typist.Backspace count={8} delay={200} />\n            <span style={{color: \"#4dd0ff\"}} className=\"tags\">{\"Tech Enthusiast\"}</span>\n            <Typist.Backspace count={15} delay={200} />\n          </Typist>\n          :\n          <div>\n            <code>\n              <span onMouseEnter={this.showText} onMouseLeave={this.hideText} style={{ fontSize: '2.5em' }}>\n                {this.state.text}\n              </span>\n            </code>\n            <br />\n            <br />\n            <span className=\"tags\" style={{color: \"#faed27\"}}>{\"Full-Stack Developer\"}</span>\n            <span>{\" | \"}</span>\n            <span className=\"tags\" style={{color: \"#ff073a\"}}>{\"Engineer\"}</span>\n            <span>{\" | \"}</span>\n            <span className=\"tags\" style={{color: \"#4dd0ff\"}}>{\"Tech Enthusiast\"}</span>\n            <br /><br /><br /><br /><br />\n            <div style={{ flexDirection: 'row' }}>\n              <span style={{ margin: '0 15px' }} ><SocialMediaIconsReact borderColor=\"rgba(0,0,0,0.25)\" borderWidth=\"5\" borderStyle=\"double\" icon=\"mail\" iconColor=\"rgba(255,255,255,1)\" backgroundColor=\"rgba(255,0,4,1)\" iconSize=\"6\" roundness=\"50%\" url=\"mailto:ssuryarajan@gmail.com\" size=\"50\" /></span>\n              <span style={{ margin: '0 15px' }} ><SocialMediaIconsReact borderColor=\"rgba(0,0,0,0.25)\" borderWidth=\"5\" borderStyle=\"double\" icon=\"linkedin\" iconColor=\"rgba(255,255,255,1)\" backgroundColor=\"rgba(28,185,223,1)\" iconSize=\"1\" roundness=\"50%\" url=\"https://www.linkedin.com/in/theWellHopeErr\" size=\"50\" /></span>\n              <span style={{ margin: '0 15px' }} ><SocialMediaIconsReact borderColor=\"rgba(0,0,0,0.25)\" borderWidth=\"5\" borderStyle=\"double\" icon=\"github\" iconColor=\"rgba(0,0,0,1)\" backgroundColor=\"rgba(255,255,255,1)\" iconSize=\"7\" roundness=\"50%\" url=\"https://www.github.com/theWellHopeErr\" size=\"50\" /></span>\n              <span style={{ margin: '0 15px' }} ><SocialMediaIconsReact borderColor=\"rgba(0,0,0,0.25)\" borderWidth=\"5\" borderStyle=\"double\" icon=\"twitter\" iconColor=\"rgba(255,255,255,1)\" backgroundColor=\"rgba(28,186,223,1)\" iconSize=\"6\" roundness=\"50%\" url=\"https://twitter.com/theWellHopeErr\" size=\"50\" /></span>\n              {/* <a href={\"\"} >\n                <Avatar\n                  alt=\"CodeChef\"\n                  src=\"/assets/images/cc.jpg\"\n                  style={{\n                    width: '4vw',\n                    height: '4vw',\n                    margin: '30px 0',\n                  }}\n                />\n              </a>\n              <a href={\"\"} >\n                <Avatar\n                  alt=\"HackerRank\"\n                  src=\"/assets/images/hr.jpeg\"\n                  style={{\n                    width: '4vw',\n                    height: '4vw',\n                    margin: '30px 0',\n                  }}\n                />\n              </a> */}\n            </div>\n\n            {/* codechef */}\n\n            {/* hackerrank */}\n          </div>\n        }\n      </div >\n    )\n  }\n}\n\nexport default Main","import React from 'react';\nimport Main from './MainComponent'\nimport Particles from 'react-particles-js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Particles\n        params={{\n          \"particles\": {\n            \"number\": {\n              \"value\": 50\n            },\n            \"size\": {\n              \"value\": 3\n            }\n          },\n          \"interactivity\": {\n            \"events\": {\n              \"onhover\": {\n                \"enable\": true,\n                \"mode\": \"repulse\"\n              }\n            }\n          }\n        }}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100vw\",\n          height: \"100%\"\n        }} />\n      <div className=\"App\" style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        textAlign: \"-webkit-center\",\n      }}>\n        <Main />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}